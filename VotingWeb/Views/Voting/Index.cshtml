@using VotingApp.Models
@model VotingWeb.Models.VotingViewModel
@{
    ViewBag.Title = "Index";
}

@{
    Layout = "../Shared/_LayoutForVoting.cshtml";
}

@section Scripts {
    <script>
        $(function () {
            $("#SupremeCourtYes").click(function () {
                if ($("#SupremeCourtYes").is(":checked")) {
                    $("#SupremeCourtNo").prop("disabled", true);
                } else {
                    $("#SupremeCourtNo").prop("disabled", false);
                }
            });
            $("#SupremeCourtNo").click(function () {
                if ($("#SupremeCourtNo").is(":checked")) {
                    $("#SupremeCourtYes").prop("disabled", true);
                } else {
                    $("#SupremeCourtYes").prop("disabled", false);
                }
            });

            $("#BallotIssueYes").click(function () {
                if ($("#BallotIssueYes").is(":checked")) {
                    $("#BallotIssueNo").prop("disabled", true);
                } else {
                    $("#BallotIssueNo").prop("disabled", false);
                }
            });
            $("#BallotIssueNo").click(function () {
                if ($("#BallotIssueNo").is(":checked")) {
                    $("#BallotIssueYes").prop("disabled", true);
                } else {
                    $("#BallotIssueYes").prop("disabled", false);
                }
            });
            $(".checkbox-inline").click(function () {
                var totalChecked = $('.checkbox-inline:checked').size();
                if (totalChecked >= 2) {
                    var unChecked = $('.checkbox-inline:checkbox').not(':checked');
                    unChecked.each(function () {
                        $(this).prop("disabled", true);
                    });
                }
                if (totalChecked < 2) {
                    $(".checkbox-inline").each(function () {
                        $(this).prop("disabled", false);
                    });
                }
            });
        });
    </script>
}

@using (Html.BeginForm("Vote", "Voting"))
{
    @Html.HiddenFor(m => m.BallotId)
    <h1>Federal and State</h1>
    <h2>For Commander in Cream and Vice Ice</h2>
    <h3>(Ranked Choice Voting (Instant Runoff))</h3>
    <p>
        <em>Rank candidates in order of choice. Mark your favorite candidate as first choice and then indicate your second and additional back-up choices in order of choice. You may rank as many candidates as you want.</em>
    </p>
    <form>
        <div class="form-group">
            @for (int i = 0; i < Model.PresidentAndVicePres.Count; i++)
            {
                <label class="control-label">@Model.PresidentAndVicePres[i].PrimeCandidateItem.Name - @Model.PresidentAndVicePres[i].PrimeCandidateItem.Party for @Model.PresidentAndVicePres[i].PrimeCandidateItem.JobName</label>
                <br />
                <label class="control-label">@Model.PresidentAndVicePres[i].SubCandidateItem.Name - @Model.PresidentAndVicePres[i].SubCandidateItem.Party for @Model.PresidentAndVicePres[i].SubCandidateItem.JobName</label>
                <br />
                @Html.TextBoxFor(m => m.PresidentAndVicePres[i].Ranking, new { @class = "form-control", @name = "PresidentAndVicePres[" + i + "].Ranking", @type = "number" })
                @Html.HiddenFor(m => m.PresidentAndVicePres[i].PrimeCandidateItem.CandidateId, new { @name = "PresidentAndVicePres[" + i + "].PrimeCandidateItem.CandidateItemId" })
                @Html.HiddenFor(m => m.PresidentAndVicePres[i].SubCandidateItem.CandidateId, new { @name = "PresidentAndVicePres[" + i + "].SubCandidateItem.CandidateItemId" })
                @Html.HiddenFor(m => m.PresidentAndVicePres[i].RankingVoteItemId, new { @name = "PresidentAndVicePres[" + i + "].RankingVoteItemId" })
                @Html.HiddenFor(m => m.PresidentAndVicePres[i].PrimeCandidateItem.JobId, new { @name = "PresidentAndVicePres[" + i + "].PrimeCandidateItem.CandidateItemId.JobId" })
                @Html.HiddenFor(m => m.PresidentAndVicePres[i].SubCandidateItem.JobId, new { @name = "PresidentAndVicePres[" + i + "].SubCandidateItem.JobId" })
            }
            <label class="control-label">Commander and Cream And Vice Ice Write In:</label>
            @Html.TextBoxFor(m => m.PresidentWriteIn.PrimeCandidateItem.Name, new { @class = "form-control" })
            @Html.TextBoxFor(m => m.PresidentWriteIn.SubCandidateItem.Name, new { @class = "form-control" })
            <label class="control-label">Ranking:</label>
            @Html.TextBoxFor(m => m.PresidentWriteIn.Ranking, new { @class = "form-control", @type = "number" })
        </div>

        <div class="form-group">
            <h2>For Chief Dairy Queen</h2>
            <h3>Unexpired Term (Vote in One Oval)</h3>
            <p>Shall @Model.SupremeCourt.CandidateItem.Name of the Supreme Court of the State of Ice Cream be retained in office for another term</p>
            <p>
                <em>Fill in the oval before the word "YES" if you wish the offical to remain in office</em>
            </p>
            <p>
                <em>Fill in the oval before the word "NO" if you do not wish the offical to remain in the office</em>
            </p>
            <br />
            <label class="control-label">Yes</label>
            @Html.CheckBoxFor(m => m.SupremeCourt.YesVote, new { @id = "SupremeCourtYes" })
            <label class="control-label">No</label>
            @Html.CheckBoxFor(m => m.SupremeCourt.NoVote, new { @id = "SupremeCourtNo" })
            @Html.HiddenFor(m => m.SupremeCourt.SingleVoteTicketId)
        </div>



        <h2>For State Rep.District M & M</h2>
        <h3>(Vote For Two)</h3>
        <div class="form-group" id="testingThis">
            @for (int i = 0; i < Model.StateRep.Count; i++)
            {
                <label class="control-label">@Model.StateRep[i].CandidateItem.Name (@Model.StateRep[i].CandidateItem.Party)</label>
                @Html.CheckBoxFor(m => m.StateRep[i].VotedFor, new { @class = "checkbox-inline", @name = "StateRep[" + i + "].VotedFor" })
                <br />
                @Html.HiddenFor(m => m.StateRep[i].CandidateItem.CandidateId, new { @class = "form-control", @name = "StateRep[" + i + "].CandidateItem.CandidateItemId" })
                @Html.HiddenFor(m => m.StateRep[i].MultipleVoteItemId, new { @class = "form-control", @name = "StateRep[" + i + "].MultipleVoteItemId" })
                @Html.HiddenFor(m => m.StateRep[i].CandidateItem.JobId, new { @class = "form-control", @name = "StateRep[" + i + "].CandidateItem.JobId" })
            }

            <label class="control-label">State Rep.District M & M Write In:</label>
            <div class="form-group">
                @Html.TextBoxFor(m => m.StateRepWriteIn.CandidateItem.Name, new { @class = "form-control col-xs-4" })
                &nbsp;
                @Html.CheckBoxFor(m => m.StateRepWriteIn.VotedFor, new { @class = "checkbox-inline" })
            </div>
            <br />

        </div>

        <h1>County</h1>
        <h2>Ballot Issue</h2>
        <h3>@Model.BallotIssue.Issue.OfficalName</h3>
        <h3>(Vote in one oval)</h3>
        <p>@Model.BallotIssue.Issue.Description</p>
        <p>
            <em>@Model.BallotIssue.Issue.Subtext</em>
        </p>
        <div class="form-group">
            <label>Yes</label>
            @Html.CheckBoxFor(m => m.BallotIssue.YesVote, new { @id = "BallotIssueYes" })
            <label>
                No
            </label>
            @Html.CheckBoxFor(m => m.BallotIssue.NoVote, new { @id = "BallotIssueNo" })
            @Html.HiddenFor(m => m.BallotIssue.Issue.VoteIssueId)
            @Html.HiddenFor(m => m.BallotIssue.SingleVoteTicketId)
        </div>
        <br />
        <button type="submit" class="btn-primary">Submit your ballot!</button>
    </form>
}